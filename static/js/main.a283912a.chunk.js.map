{"version":3,"sources":["assets/FC-T-model1.jpeg","assets/FC-thumbnail1.jpeg","logo.svg","assets/FCMP-mask-model.jpeg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","App","className","Logo","Title","Content","Section","TiltedMarque","src","img1","alt","RotateZ","style","border","color","padding","fontSize","img2","img3","logo","MarqueeReverse","Marquee","Blink","GrowShrink","children","speed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a283912a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FC-T-model1.4570a916.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/FC-thumbnail1.634f5f80.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.498bdc7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/FCMP-mask-model.5d4a2bff.jpeg\";","import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\n\nimport img1 from './assets/FC-T-model1.jpeg'\nimport img2 from './assets/FC-thumbnail1.jpeg'\nimport img3 from './assets/FCMP-mask-model.jpeg'\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <Logo />\n        <Title />\n      </header>\n      <Content>\n        <Section>\n          <TiltedMarque>\n            <span className=\"sectionTitle\">WOW!!</span>\n          </TiltedMarque>\n          <img src={img1} alt=\"\"/>\n        </Section>\n        <Section>\n          <RotateZ>\n            <span style={{border: '2px solid', color: '#fff', padding: 5, fontSize: 60}}>CLICK HERE</span>\n          </RotateZ>\n          <img src={img2} alt=\"\"/>\n        </Section>\n        <Section>\n          <img src={img3} alt=\"\"/>\n        </Section>\n        <Section>\n          <img src={img1} alt=\"\"/>\n        </Section>\n        <Section>\n          <img src={img2} alt=\"\"/>\n        </Section>\n      </Content>\n    </div>\n  )\n}\n\nfunction Logo() {\n  return <img src={logo} className=\"logo\" alt=\"rm-logo\" />\n}\n\nfunction Title() {\n  return (\n    <div className=\"headerTitle\">\n      <div >\n      <div className=\"marqueeBorders\">\n          <MarqueeReverse>\n            <h1 className=\"rmName\">\n              RONA MERCH CO.\n            </h1>\n          </MarqueeReverse>\n        </div>\n        <div className=\"marqueeBorders\">\n          <Marquee>\n            <h2 className=\"rmName\">\n              OPEN FOR BUSINESS\n            </h2>\n          </Marquee>\n        </div>\n        <div className=\"marqueeBorders\">\n          <Marquee>\n            <h3 className=\"rmName\">\n              OPEN FOR BUSINESS\n            </h3>\n          </Marquee>\n        </div>\n      </div>\n      <div className=\"spaceAround\">\n        <Blink>\n          <span className=\"sale\">FLASH SALE</span>\n        </Blink>\n        <GrowShrink>\n          <span className=\"buyNow\">BUY NOW</span>\n        </GrowShrink>\n      </div>\n    </div>\n  )\n}\n\n\n\ntype ChildProps = { children: React.ReactNode }\n\nfunction Content({ children }: ChildProps) {\n  return (\n    <div className=\"content\">\n      {children}\n    </div>\n  )\n}\n\n\nfunction Section({ children }: ChildProps) {\n  return (\n    <div className=\"section\">\n      {children}\n    </div>\n  )\n}\n\nfunction TiltedMarque({ children }: ChildProps) {\n  return (\n    <div className=\"tilt\">\n      <Marquee>\n        {children}\n      </Marquee>\n    </div>\n  )\n}\n\nfunction Marquee({ children, speed }: ChildProps & {speed?: number}) {\n  return (\n      <div className=\"marquee\">\n        <div className=\"marqueeInner\">\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n        </div>\n      </div>\n  )\n}\n\nfunction MarqueeReverse({ children }: ChildProps) {\n  return (\n      <div className=\"marquee\">\n        <div className=\"marqueeInnerReverse\">\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n          <span>{children}</span>\n        </div>\n      </div>\n  )\n}\n\nfunction Blink({ children }: ChildProps) {\n  return (\n    <div className=\"blink\">\n      {children}\n    </div>\n  )\n}\n\nfunction GrowShrink({ children }: ChildProps) {\n  return (\n    <div className=\"growShrink\">\n      {children}\n    </div>\n  )\n}\n\nfunction RotateZ({ children }: ChildProps) {\n  return (\n    <div className=\"rotateZContainer\">\n      <div className=\"rotateZ\">\n        {children}\n      </div>\n    </div>\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}